@model PM.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "تغییر کلمه عبور";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2>@ViewBag.Title</h2>*@

@using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @*<h4>تغییر کلمه عبور</h4>*@
    <hr />
    <div class="panel-heading lead">
        <div class="row">
            <div class="col-lg-8 col-md-8"><i class="fa fa-users"></i> تغییر کلمه عبور</div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-lg-4 col-md-4 text-right">
                <div class="btn-group text-center">
                    <a href="~/Home/" class="btn btn-info btn-sm btn-default"><i class="fa fa-eye fa-1x"></i></a>
                     </div>
                </div>
            </div>
        </div>
    
    <div class="row panel panel-info" style="margin-top:2%;">
        @Html.ValidationSummary("", new { @class = "text-danger" })
     @*   @Html.HiddenFor(model => model.Code)*@
             <div class="tab-content">                          
                            <div id="Summery" class="tab-pane fade in active">
                                <div class="table-responsive panel">
                                    <table class="table">
                                        <tbody>                  
 					                        <tr>
                                                <td class="text-info"><i class="fa fa-pencil"></i> @Html.DisplayNameFor(model => model.userID)</td>
                                                <td>@Html.EditorFor(model => model.userID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                              @*  @Html.ValidationMessageFor(model => model.userID, "", new { @class = "text-danger" })*@</td>
                                            </tr>
                                            <tr>
                                                <td class="text-info"><i class="fa fa-pencil"></i> @Html.DisplayNameFor(model => model.userName)</td>
                                                <td>
                                                    @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                @*@Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })*@
                                            </td>
                                        </tr>
                                            <tr>
                                                <td class="text-info"><i class="fa fa-pencil"></i> @Html.DisplayNameFor(model => model.oldPassword)</td>
                                                <td>
                                                    @Html.EditorFor(model => model.oldPassword, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.oldPassword, "", new { @class = "text-danger" })
                                            </td>
                                        </tr>
                                            <tr>
                                                <td></td>
                                                <td class="text-danger">
                                                    @Html.DisplayFor(model => Model.LoginErrorMessage)
                                                   
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="text-info"><i class="fa fa-pencil"></i> @Html.DisplayNameFor(model => model.Password)</td>
                                                <td>
                                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                            </td>
                                        </tr>
                                            <tr>
                                                <td class="text-info"><i class="fa fa-pencil"></i> @Html.DisplayNameFor(model => model.ConfirmPassword)</td>
                                                <td>
                                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                                </td>
                                            </tr>

											
                                    </table>                                
                                </div>
                            </div>
                            <div id="General" class="tab-pane fade ">
                            </div>
                        </div>
       
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-success" value="تغییر کلمه عبور"  />
                </div>
            </div>
        @*<p>
            @Html.ActionLink("برگشت به صفحه اصلی", "index","Home", new { @style = "font-weight:bold;", @class = "text-info" })
        </p>*@
        </div>
   
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
